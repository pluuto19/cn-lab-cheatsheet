------------------------------ TELNET -----------------------------------------

- en
- conf t
- line vty 0 15
- pass <switch-access-pass> [the password that will be used to TELNET into the switch]
- login
- exit
- enable pass <priviledged access mode pass> [the password that will be used to put the switch into priviledge mode after TELNETTING into it]

------------------------------ SSH -----------------------------------------

- hostname router1
- ip domain name final-lab
- crypto key generate rsa
- 1024
- enable pass asher123
- ip ssh version 2
- line vty 0 15
- transport input ssh
- exit
- username pluuto secret abc123
- line vty 0 15
- login local

------------------------------ RIP v1/v2 -----------------------------------------

- router rip
- version 2 [dont include this if dont want to enable RIPv2]
- network 192.168.0.0 [a /24 network connected to one of the interfaces of the router]
- network 10.0.0.0 [a /8 point-to-point network that connects one router to another router]

------------------------------ OSPF -----------------------------------------

- router ospf 1
- network 120.137.0.1 0.255.255.255 area 0 [0.255.255.255 is a wildcard. Basically, just reverse the subnet bits. So, where class A has a default subnet of 255.0.0.0, it's wildcard will be 0.255.255.255. Same technique will be used for getting a wildcard of a subnetted mask]

------------------------------ VLANS -----------------------------------------

- switch part:
- en
- conf t
- vlan 10 [create a VLAN of any number ID on this switch]
- name myVLAN10 
- int fa0/0
- switchport mode access/trunk [access for host-switch, trunk for switch-switch. make sure to set the other switch's port (which connects to this switch's port) as trunk as well]
- switchport access vlan 10 [ assign this port (here fa0/0) to an already created VLAN if this port connects to host/if this port is access link ]

- router part (for inter-vlan routing):
- int gig0/0/0.10
- encapsulation dot1q 10 [here 10 is the vlan ID]
- ip add 192.168.1.1 255.255.255.0

------------------------------ DHCP ---------------------------------------------

- dhcp pool [name]
- network 192.168.1.0 255.255.255.0
- default-router 192.168.1.1
- exit
- ip dhcp excluded-address 192.168.1.1 [192.168.1.100]

------------------------------ ACL -----------------------------------------

- access-list 1 permit/deny host [ip]
- int fa0/0
- ip access-group 1 in/out

------------------------------ SUBNETTING THEORY -----------------------------------------

- classful addressing: 
- 5 IP classes, each with a pre-defined default subnet mask. CAN NOT
- further break a subnet into smaller subnets.
- e.g, 120.137.0.1, an IP of class A, has a default mask of 255.0.0.0. This IP can have
- 256*2556*256 IPs. We can not create more subnets of this 120.0.0.0 network.
- 192.130.10.15, an IP of class C, has a default mask of 255.255.255.0. This network
- (192.130.10.0) can only have 256 usable IPs.
- Note: How many hosts an IP address can have is specified by the mask. In case of 
- 120.137.0.1, the network was 120.0.0.0 as specified by the subnet mask. So, 256^3
- usable IPs. In case of 192.130.10.15, the network was 192.130.10.0 as specified by
- the mask. So 256 IPs only.

- classless addressing:
- no concept of classes, any IP address can be given any subnet mask. Not just /8, /16
- /24 as was with classful addressing.
- for example, an IP of 10.0.0.0 can be assigned a /24 subnet and it will work fine.
- This introduced further implications. Now that each IP can have any mask, this means
- we can assign to an organization, a large chunk of the IP address space. Sure, this will
- work no problems, but the network will be super slow and managing it will be a pain.
- Imagine managing a 1000 or more devices in a single building. For this purpose, we can
- break a network into further smaller logical networks, called subnets. This is how they
- work:
- You have been assigned an IP of 123.45.0.0 /12. This mask supports 2 ^ 20 = 1,048,576 IPs
- Just like a /8 IP contains 16 million IPs (2^24) and a /24 ip contains 256 IPs (2^8)
- Further subnetting it requires us that we take bits from the host portion (the 24 bits)
- and assign it the network portion. In our case, breaking this network in two subnets
- will require us to take one bit only. Because a bit can be only off or on, when a bit will be
- off, it will form one network, and when the bit is on, it will form another network.
- So 123.45.0.0 /12 will turn into 123.45.0.0 /13 and the total host count will drop from
- 1,048,576 to 524,288 in each 2 subnets each. The network id of this first portion will be
- 123.45.0.0 /13 and broadcast will be 123.52.0.0 /13. And for the second, it will be 123.53.0.0 to 
- 123.60.0.0.
- We can calculate the subnet mask like
- 11111111.11111000.00000000.00000000 = 255.248.0.0 (simple binary to integer conversion)
- This is the essence of subnetting. Also, we can divide a network into into subnets containing
- a variable number of hosts. Above, we divided a network into 2 networks of equal sizes, but we
- also divide it such that the number of hosts in each subnet is different. Note that the second
- subnet starting from 123.52.0.0 will not change.